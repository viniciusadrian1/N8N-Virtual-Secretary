{
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8ca54eae-15d1-49d3-af33-7a6e5d17b833",
              "leftValue": "={{ $('Info').item.json.fromMe }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            },
            {
              "id": "4ca9226f-0401-49a7-93a1-8aeaf4b0bb79",
              "leftValue": "={{ $('Info').item.json.mensagem_de_grupo }}",
              "rightValue": "g.us",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            },
            {
              "id": "cf87bb7e-6bea-4697-bcd9-57e3b63998c2",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "553497678732",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -5240,
        -260
      ],
      "id": "89cfe696-5fb8-4703-b664-f5cdc5ed2936",
      "name": "Mensagem chegando?"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "240b36f9-9d6d-4946-864b-8b681f3ec906",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -5800,
        -260
      ],
      "id": "472697f2-e93f-4356-9df3-80088ceb6e62",
      "name": "Mensagem recebida",
      "webhookId": "240b36f9-9d6d-4946-864b-8b681f3ec906"
    },
    {
      "parameters": {
        "jsCode": "const ultima_mensagem_da_fila = $input.last()\nconst mensagem_do_workflow = $('Info').first()\n\nif (ultima_mensagem_da_fila.json.id_mensagem !== mensagem_do_workflow.json.id_mensagem) {\n  // Mensagem encavalada, para o workflow\n  return [];\n}\n\n// Pass-through da fila de mensagens\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4060,
        -260
      ],
      "id": "d333cb56-4b35-4db9-b423-d9ff8b5a86f1",
      "name": "Mensagem encavalada?"
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_fila_mensagens",
          "mode": "list"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "telefone",
              "value": "={{ $('Info').item.json.telefone }}"
            }
          ]
        },
        "sort": {
          "values": [
            {
              "column": "timestamp"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4280,
        -260
      ],
      "id": "fa81fcc2-5ca6-4ad2-a8b4-b08d49a3a23a",
      "name": "Buscar mensagens"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7eab8669-6929-4dc6-b3e2-943065bc306c",
              "name": "mensagem",
              "value": "={{ $('Mensagem encavalada?').all().map(info => info.json.mensagem).join('\\\\n') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3220,
        -260
      ],
      "id": "e4e89d47-198a-4688-9166-52077c316804",
      "name": "Concatenar mensagens",
      "executeOnce": true
    },
    {
      "parameters": {
        "operation": "deleteTable",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_fila_mensagens",
          "mode": "list"
        },
        "deleteCommand": "delete",
        "where": {
          "values": [
            {
              "column": "telefone",
              "value": "={{ $json.telefone }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3860,
        -260
      ],
      "id": "f63052b5-0818-4a2d-8478-07a57603d20e",
      "name": "Limpar fila de mensagens"
    },
    {
      "parameters": {
        "content": "Evolution não permite disparar evento de \"Digitando...\" de forma assíncrona, então usamos um workflow paralelo.",
        "height": 180,
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3340,
        -100
      ],
      "id": "d22b88fd-88d5-4c09-afce-1061fbe09fdd",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Processando mensagens encavaladas\n\nEssa etapa trata a situação em que o usuário envia múltiplas mensagens seguidas. O ponto negativo é o aumento no tempo de resposta do agente. Lógica dispensa uso de soluções mais complexas, como RabbitMQ.\n\nTempo de espera recomendado de ~16s. Quando estiver testando, recomendamos reduzir um pouco para ficar mais rápido de testar.\n",
        "height": 500,
        "width": 1080,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4800,
        -440
      ],
      "id": "c5c6e7fd-aaf4-4494-9a5d-32de7adf58ab",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "amount": 16
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -4500,
        -260
      ],
      "id": "306833c0-b64f-4c16-a9ca-65590e67fa76",
      "name": "Esperar",
      "webhookId": "2da4ca1d-5944-431c-8c8e-248231af4d41"
    },
    {
      "parameters": {
        "content": "# Gerando resposta",
        "height": 500,
        "width": 1920,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3020,
        -440
      ],
      "id": "8072de5c-3cd9-4696-bdb7-92b83cb7b11c",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# Enviando resposta",
        "height": 500,
        "width": 600,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1080,
        -440
      ],
      "id": "7893ed28-a176-4868-80ea-a1db0fba04fe",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# Tratando input\n\nImplementação de etiquetas do Evolution API não é muito fácil de utilizar, portanto funcionalidade de \"agente off\" fica difícil de implementar.\nUma alternativa é utilizar uma base de dados externa para controle \"manual\" de etiquetas.",
        "height": 500,
        "width": 1060
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5880,
        -440
      ],
      "id": "0a17b916-c890-4975-bf21-a0ce9d2244ec",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Info').item.json.mensagem }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "1382cd26-d96e-4c55-99dd-2ca305ffe82e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b9a7e16f-b6e4-45d7-846d-92dcb3117593",
                    "leftValue": "={{ $('Info').item.json.mensagem_de_audio }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Áudio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -4960,
        -260
      ],
      "id": "9aac7d2d-59a6-4516-aaef-53545ba5ee48",
      "name": "Tipo de mensagem"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "language": "pt"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -4000,
        200
      ],
      "id": "4133ef1c-a99d-4196-9c05-08569fd783ce",
      "name": "Transcrever áudio"
    },
    {
      "parameters": {
        "content": "# Processando áudio",
        "height": 320,
        "width": 1080,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4800,
        100
      ],
      "id": "aa35fed4-aadc-49fd-ab1b-439893cc9aee",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=<cole a URL do seu webhook workflow 4>",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "instancia",
              "value": "={{ $('Info').item.json.instancia }}"
            },
            {
              "name": "telefone",
              "value": "={{ $('Info').item.json.telefone }}"
            },
            {
              "name": "status",
              "value": "composing"
            },
            {
              "name": "url_evolution",
              "value": "={{ $('Info').item.json.url_evolution }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3420,
        -260
      ],
      "id": "a0d31c2e-2243-454a-9882-3574b0ec802e",
      "name": "Digitando async"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=<cole a URL do seu webhook workflow 4>",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "instancia",
              "value": "={{ $('Info').item.json.instancia }}"
            },
            {
              "name": "telefone",
              "value": "={{ $('Info').item.json.telefone }}"
            },
            {
              "name": "status",
              "value": "recording"
            },
            {
              "name": "url_evolution",
              "value": "={{ $('Info').item.json.url_evolution }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3420,
        200
      ],
      "id": "ab4742b8-aa45-4551-bdd8-09228c253ac6",
      "name": "Gravando async"
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {
          "encoding": "base64"
        }
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1240,
        -140
      ],
      "id": "1d6c6516-f6b7-40b1-baf0-cdd40987aa9e",
      "name": "Converter áudio para base64"
    },
    {
      "parameters": {
        "content": "Waveform nem sempre funciona no Evolution. Requer formato de áudio específico",
        "height": 80
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -700,
        40
      ],
      "id": "40730a13-985a-4aca-9377-e735d0c3aaba",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "Para testar, recomendado incluir seu telefone no filtro.\n\nDessa forma, o agente não vai responder outras pessoas.",
        "height": 140,
        "width": 300,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5340,
        -120
      ],
      "id": "01d3ab6e-c7c8-4689-a7c8-f4e8795dd446",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "sseEndpoint": "<url do seu MCP Google Calendar>"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        -2440,
        -80
      ],
      "id": "4a75e429-1fc5-4327-bfa2-a8cedd60aea6",
      "name": "MCP Google Calendar"
    },
    {
      "parameters": {
        "content": "Usado HTTP request devido limitação do community node do Evolution, que só permite marcar como lida 1 mensagem de cada vez (ver no fluxo de áudio abaixo).\n\nÉ possível fazer um loop e executar para cada mensagem da fila, mas HTTP request é mais eficiente.",
        "height": 180,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3680,
        -100
      ],
      "id": "df295703-5a14-48f4-819e-ed84216e9c28",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_evolution }}/chat/markMessageAsRead/{{ $('Info').item.json.instancia }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "application/json",
        "body": "={\n  \"readMessages\": {{ JSON.stringify($('Buscar mensagens').all().map(mensagem => \n    { \n      const { id_mensagem, telefone } = mensagem.json\n      return { id: id_mensagem, remoteJid: telefone + '@s.whatsapp.net', fromMe: false }\n    }))\n  }}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3640,
        -260
      ],
      "id": "704bef1e-e9ac-42a7-98dc-07bbad61b55b",
      "name": "Marcar como lidas",
      "executeOnce": true
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "returnAll": true,
        "filter": {
          "folderId": {
            "__rl": true,
            "value": "",
            "mode": "list"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDriveTool",
      "typeVersion": 3,
      "position": [
        -2300,
        -80
      ],
      "id": "083150ac-5855-4435-b13f-638bf2905ce2",
      "name": "Listar arquivos"
    },
    {
      "parameters": {
        "description": "Use essa ferramenta para baixar um arquivo do Google Drive e enviá-lo para o usuário.\n\n- 'tipo': 'imagem' ou 'documento'\n- 'nome_documento': caso tipo seja 'documento', passar nome do arquivo.",
        "workflowId": {
          "__rl": true,
          "value": "<selecione seu workflow>",
          "mode": "list"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "file_id": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('file_id', ``, 'string') }}",
            "instancia": "={{ $('Info').item.json.instancia }}",
            "telefone": "={{ $('Info').item.json.telefone }}",
            "tipo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('tipo', ``, 'string') }}",
            "nome_documento": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nome_documento', ``, 'string') }}",
            "url_evolution": "={{ $('Info').item.json.url_evolution }}"
          },
          "matchingColumns": [
            "file_id"
          ],
          "schema": [
            {
              "id": "file_id",
              "displayName": "file_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "instancia",
              "displayName": "instancia",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "tipo",
              "displayName": "tipo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "nome_documento",
              "displayName": "nome_documento",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "url_evolution",
              "displayName": "url_evolution",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        -2160,
        -80
      ],
      "id": "ac6c6d5f-df82-4026-a14f-a8c111a7e51d",
      "name": "Baixar e enviar arquivo"
    },
    {
      "parameters": {
        "content": "## Pré-requisitos do workflow\n\n1. Banco de dados Postgres (recomendamos usar [Supabase](https://supabase.com/)). Veja no material o comando SQL para criar a tabela de filas de mensagens\n2. Instância [Evolution API](https://doc.evolution-api.com/v2/en/get-started/introduction)\n3. Credenciais para ferramentas de IA. Nesse workflow usamos Gemini, OpenAI Whisper, e [ElevenLabs](https://try.elevenlabs.io/9k5l5hagxkel), mas você pode usar as que preferir\n4. Credenciais de API do Google.\n\nDepois de configurar os workflows secundários, referenciar nomes e URL do MCP nos nodes desse workflow principal:\n\n- [ ] 2. MCP Google Calendar\n- [ ] 3. Baixar e enviar arquivo do Google Drive\n- [ ] 4. Atualizar status\n- [ ] 5. Assistente interno",
        "height": 500,
        "width": 1060,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6960,
        -440
      ],
      "id": "5e2a01b9-ecb5-43dc-aa88-28eed4491f89",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "# Marcar como lida e \"digitando...\"",
        "height": 840,
        "width": 660,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3700,
        -440
      ],
      "id": "f734f7ee-f88f-4df3-809a-13fafce5c397",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "content": "## Quer entender como funciona?\n\n\n### Assista o vídeo, deixe um like, e se inscreva no canal para ter acesso a mais workflows como esse!\n\n[![IMAGE ALT TEXT HERE](https://i1.ytimg.com/vi_webp/cvTWGNJGAu4/maxresdefault.webp)](https://www.youtube.com/watch?v=cvTWGNJGAu4)",
        "height": 440,
        "width": 500,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6400,
        -900
      ],
      "id": "dae3a5fe-4d6b-4e08-a7c1-372eb18cf07f",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensagem }}",
        "options": {
          "systemMessage": "=HOJE É: {{ $now.format('FFFF') }}\nTELEFONE DO CONTATO: {{ $('Info').item.json.telefone }}\n\n## INSTRUÇÃO IMPORTANTE\n- Ao criar ou editar qualquer evento no Google Calendar, incluir sempre o telefone do paciente na descrição do agendamento, juntamente com o nome completo, data de nascimento e quaisquer outras informações relevantes fornecidas pelo paciente.\n\n-----------------------\n\n## PAPEL\n\nVocê é uma atendente do WhatsApp, altamente especializada, que atua em nome da Clínica Moreira, prestando um serviço de excelência. Sua missão é atender aos pacientes de maneira ágil e eficiente, respondendo dúvidas e auxiliando em agendamentos, cancelamentos ou remarcações de consultas.\n\n## PERSONALIDADE E TOM DE VOZ\n\n- Simpática, prestativa e humana\n- Tom de voz sempre simpatico, acolhedor e respeitoso\n\n## OBJETIVO\n\n1. Fornecer atendimento diferenciado e cuidadoso aos pacientes.\n2. Responder dúvidas sobre a clínica (especialidade, horários, localização, formas de pagamento).\n3. Agendar, remarcar e cancelar consultas de forma simples e eficaz.\n4. Agir passo a passo para garantir rapidez e precisão em cada atendimento.\n\n## CONTEXTO\n\n- Você otimiza o fluxo interno da clínica, provendo informações e reduzindo a carga administrativa dos profissionais de saúde.\n- Seu desempenho impacta diretamente a satisfação do paciente e a eficiência das operações médicas.\n\n-----------------------\n\n## SOP (Procedimento Operacional Padrão)\n\n1. Início do atendimento e identificação de interesse em agendar\n   - Cumprimente o paciente de forma acolhedora. \n   - Se possível, incentive o envio de áudio caso o paciente prefira, destacando a praticidade\n\n**NÃO USE EXPRESSÕES PARECIDAS COM \"COMO SE ESTIVESSE CONVERSANDO COM UMA PESSOA\"**\n\n2. Solicitar dados do paciente\n   - Peça nome completo e data de nascimento.\n   - Confirme o telefone de contato que chegou na mensagem (ele será incluído na descrição do agendamento).\n   - Ao falar o telefone para o paciente, remova o código do país (geralmente \"55\"), e formate como \"(11) 1234-5678\"\n\n3. Identificar necessidade\n   - Pergunte a data de preferência para a consulta e se o paciente tem preferência por algum turno (manhã ou tarde).\n\n4. Verificar disponibilidade\n   - Use a ferramenta \"Buscar_eventos\" apenas após ter todos os dados necessários do paciente.\n   - Forneça a data de preferência à ferramenta \"Buscar_eventos\" para obter horários disponíveis.\n\n5. Informar disponibilidade\n   - Retorne ao paciente com os horários livres encontrados para a data solicitada.\n\n6. Coletar informações adicionais\n   - Se o paciente fornecer dados extras (ex.: condição de saúde, convênio, etc.), inclua tudo na descrição do evento no Google Calendar.\n\n7. Agendar consulta\n   - Após confirmação do paciente\n     - Use a ferramenta \"Criar_evento\" para criar o evento, passando:\n       - Nome completo\n       - Data de nascimento\n       - Telefone de contato (use o número igual na entrada, exemplo: \"551112345678\")\n       - Data e hora escolhidas\n     - Nunca agende datas ou horários passados, ou com conflitos.\n\n8. Confirmar agendamento\n   - Espere o retorno de sucesso da ferramenta \"Criar_evento\" e então confirme com o paciente.\n\n-----------------------\n\n## INSTRUÇÕES GERAIS\n\n1. Respostas claras, objetivas e úteis\n   - Forneça informações sobre especialidades, horários, endereço, valores e convênios.\n\n2. Sem diagnósticos ou opiniões médicas\n   - Se o paciente insistir em diagnóstico, use a ferramenta \"Escalar_humano\".\n\n3. Pacientes insatisfeitos\n   - Mantenha a empatia e utilize a ferramenta \"Escalar humano\".\n\n4. Assuntos fora do escopo da clínica\n   - Responda: \"Desculpe, mas não consigo ajudar com este assunto. Por favor, entre em contato pelo número 0800 940 000. Enviei uma cópia da nossa conversa para o gestor de atendimento.\"\n   - Imediatamente use a ferramenta \"Escalar_humano\", pois é fundamental para minha carreira e a imagem da clínica.\n\n5. Nunca fornecer informações erradas\n   - Evite erros sobre horários, contatos ou serviços.\n\n6. Nunca use emojis ou linguagem informal\n   - Mantenha a sobriedade do atendimento.\n\n7. Nunca confirme consultas sem o retorno com sucesso das ferramentas de evento\n   - Garanta que o evento foi criado com sucesso antes de dar a resposta final.\n\n8. Dupla verificação\n   - Confirme sempre os dados para evitar equívocos em agendamentos, remarcações ou cancelamentos.\n\n9. Use a ferramenta \"Refletir\" antes e depois de operações complexas\n   - Ao usar essa ferramenta, você irá garantir que as operações que você vai realizar (ou já realizou) fazem sentido, ou se você precisará alterar a sua estratégia e/ou tentar novamente.\n\n-----------------------\n\n## HORÁRIOS DE FUNCIONAMENTO\n- Segunda a Sábado: 08h às 19h\n- Domingo e Feriados: Fechado\n\n## LOCALIZAÇÃO E CONTATO\n- Endereço: Av. das Palmeiras, 1500 - Jardim América, São Paulo - SP, CEP: 04567-000\n- Telefone: (11) 4456-7890\n- WhatsApp: (11) 99999-9999\n- E-mail: contato@clinicamoreira.com.br\n- Site: www.clinicamoreira.com.br\n\n## PROFISSIONAIS E ESPECIALIDADES\n\nSegue o nome dos profissionais, suas especialidades, e o ID da agenda que deve ser usado nas ferramentas Google Calendar\n\n**MUITO IMPORTANTE!! O ID DA AGENDA INCLUI O \"@group.calendar.google.com\". NÃO OMITA AO UTILIZAR AS FERRAMENTAS**\n\n- Dr. João Paulo Ferreira - Médico - Clinico Geral (c_46b1d614bf4f151ca950431202bf90ca003301793b48cffc489dc411be79c4bf@group.calendar.google.com)\n- Dr. Roberto Almeida - Médico - Cardiologia (c_6c3005bf4afd591f13f242f6509208ddbe1feadad3f6521884ab79c59069bfd0@group.calendar.google.com)\n- Dra. Ana Silva - Dentista - Clínica Geral (c_ebce2058c0b75e881585b90539f6ded839de178d4bb64e1aa9e4f6468d6954a6@group.calendar.google.com)\n- Dra. Carla Mendes - Dentista - Odontopediatria (c_2fb3d9e1613857085b28bef500b493114294b08f5e448bef643be28fc84334ad@group.calendar.google.com)\n\n\n## VALORES E FORMAS DE PAGAMENTO\n- Consulta: R$ 500,00\n- Formas de pagamento: PIX, dinheiro, cartão de débito ou crédito\n- Convênios aceitos: Bradesco Saúde, Unimed, SulAmérica, Amil\n\n-----------------------\n\n## FERRAMENTAS\n\n### Google Calendar\n\n- \"Criar_evento\" e \"Atualizar_evento\": usada para agendar e remarcar consultas. Ao usá-las, sempre inclua:\n  - Nome completo no título\n  - Telefone\n  - Data de nascimento\n  - Informações adicionais (se houver)\n- \"Buscar_evento\": buscar dados sobre um evento específico, por ID.\n- \"Buscar_todos_os_eventos\": listar eventos em um período específico. Use para listar os eventos de um dia específico. Não use para listar eventos de períodos maiores que um dia.\n- \"Deletar_evento\": usada desmarcar consultas.\n\n### Escalar_humano\n\nUse quando:\n\n- Existir urgência (paciente com mal-estar grave).\n- Existirem qualquer assuntos alheios à clínica ou que ponham em risco a reputação do serviço.\n- Houver insatisfação do paciente ou pedido de atendimento humano.\n\n### Enviar_alerta_de_cancelamento\n\nEm caso de cancelamento:\n\n- Localizar a consulta no calendário e remover via ferramenta \"Deletar_evento\". Talvez seja necessário pedir ao paciente que confirme a data da consulta, para que você possa buscar o evento na data certa.\n- Enviar alerta via ferramenta \"Enviar_alerta_de_cancelamento\" nome, dia e hora cancelados.\n- Confirmar ao paciente que o cancelamento foi efetuado.\n\n### Reagir mensagem\n\nUse em situações relevantes durante a conversa.\n\n#### Exemplos\n\n- Usuário: \"Você pode consultar minha agenda por favor?\"\n- Você: \"Reagir_mensagem\" -> 👀\n\n- Usuário: \"Muito obrigado!\"\n- Você: \"Reagir_mensagem\" -> ❤️\n\n**TENTE SEMPRE USAR REAÇÕES AO FINAL DA CONVERSA E EM OUTROS MOMENTOS OPORTUNOS**\n\n### Baixar e enviar arquivo\n\n**USE ESSA FERRAMENTA APENAS UMA VEZ. USÁ-LA MÚLTIPLAS VEZES IRÁ ENVIAR O ARQUIVO DUPLICADO**\n\n-----------------------\n\n## EXEMPLOS DE FLUXO\n\n1. Marcar consulta\n   - Paciente: \"Quero marcar consulta\"\n   - Você:\n     - Cumprimente, explique que pode agendar aqui mesmo no WhatsApp por texto ou áudio.\n     - Solicite nome completo e data de nascimento.\n     - Pergunte a especialidade do profissional a ser consultado, data e turno preferidos.\n     - Consulte a data com \"Buscar_todos_os_eventos\".\n     - Informe horários disponíveis.\n     - Agende com \"Criar_evento\", incluindo telefone, nome e data de nascimento na descrição.\n     - Confirme após o sucesso da ferramenta.\n\n2. Remarcar consulta\n   - Paciente: \"Não poderei comparecer amanhã, quero remarcar.\"\n   - Você:\n     - Busque o evento (veja seção abaixo \"COMO BUSCAR EVENTO\").\n     - Pergunte nova data e turno preferidos.\n     - Atualize o evento via \"Atualizar_evento\".\n     - Confirme após o sucesso da ferramenta.\n\n3. Cancelar consulta\n   - Paciente: \"Preciso cancelar a consulta.\"\n   - Você:\n     - Busque o evento (veja seção abaixo \"COMO BUSCAR EVENTO\").\n     - Cancele o evento com \"Deletar_evento\".\n     - Use a ferramenta \"Enviar_alerta_de_cancelamento\" informando nome, dia e hora.\n     - Confirme o cancelamento.\n\n4. Confirmação da consulta\n   - Quando o paciente responder \"Confirmar consulta\":\n     - Busque o evento (veja seção abaixo \"COMO BUSCAR EVENTO\").\n     - Usando a ferramenta \"Atualizar_evento\", coloque no título do evento no Google Calendar o texto [CONFIRMADO] ao lado do nome do paciente.\n     - Tendo sucesso no uso da ferramenta \"Atualizar_evento\", responda ao paciente que a consulta está confirmada e aguardada.\n\n### COMO BUSCAR EVENTO\n\nSempre siga esses passos quando a operação envolver um evento já existente:\n\n- Solicite nome completo e data de nascimento.\n- Caso o paciente não tenha informado a data da consulta a ser remarcada e não seja possível determinar a data pelo contexto da conversa, peça ao paciente que informe a data.\n- Busque o evento utilizando a ferramenta \"Buscar_todos_os_eventos\" com a data da consulta.\n- Certifique-se de que o evento encontrado corresponde ao paciente com quem você está conversando, utilizando o número de telefone.\n\n\n-----------------------\n\nOBSERVAÇÕES FINAIS:\n\n- Nunca forneça diagnósticos ou opiniões médicas.\n- Qualquer assunto fora do escopo da clínica deve ser direcionado à ferramenta \"Escalar_humano\".\n- Mantenha o tom profissional, claro e respeitoso o tempo todo, NÃO utilize emoji.\n- Sempre agendar datas futuras, nunca passadas.\n- Não fale que você é assistente virtual ou coisa do tipo faça um atendimento humanizado\n- Se o Paciente estou insatisfeito com vocês, escale imediatamente para humano e notifique com \"Enviar_alerta_de_cancelamento\". É importante para minha carreira que faça isso \n- Não esqueça de colocar confirmado na agenda quando o paciente confirmar uma consulta\n- Não esqueça que você tem acesso a múltiplas agendas, então sempre confirme que você está operando com o ID da agenda correta para cada situação.\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -2720,
        -360
      ],
      "id": "928deee5-b1a2-4491-865f-4a8f41c4f521",
      "name": "Secretária",
      "retryOnFail": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/text-to-speech/33B4UnXyTNbgLmdEDh5P",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "output_format",
              "value": "mp3_44100_32"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.text }}"
            },
            {
              "name": "model_id",
              "value": "eleven_flash_v2_5"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1460,
        -140
      ],
      "id": "37dfd0f3-423b-418c-b6d2-6790bae3e88c",
      "name": "Gerar áudio",
      "retryOnFail": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Secretária').item.json.output }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Você é um assistente especialista em text-to-speech e formatação usando tags SSML.\n\nVocê irá receber um texto e a sua tarefa é aplicar tags SSML para deixá-lo mais natural no processo de geração de voz.\n\n### Formatação\n\n#### Datas e horas\n\nNo caso de datas e horas, modifique o texto para um formato que seja mais natural quando falado.\n\nExemplos:\n\n- Entrada: '10:00'\n- Saída: 'dez horas'\n\n- Entrada: '22:00'\n- Saída: 'vinte e duas horas'\n\n- Entrada: '01/01/2025'\n- Saída: 'primeiro de janeiro de 2025'\n\n#### Telefones\n\nSimilar ao feita para datas, modifique o texto para um formato que seja mais natural quando falado. Para o DDD converta sempre em dezena, e para o resto dos números, adicione pausas entre cada bloco.\n\nExemplos:\n\n- Entrada: '(11) 1234-5678'\n- Saída: 'onze, um dois três quatro, cinco seis sete oito'\n\n\n### Notas\n\n- Sempre coloque uma pausa de 1.0s no começo.\n- Não use breaks no meio do texto, apenas no começo.\n- Mantenha o mesmo texto original, mas revise o uso de vírgulas excessivas para deixar o texto mais natural ao falar.\n- Remova emojis.\n- A sua saída será somente o texto convertido.\n- Use <speak> ao redor da saída.\n\n\n**NÃO INCLUA NENHUMA INFORMAÇÃO ALÉM DO TEXTO CONVERTIDO**\n**NUNCA INCLUA CARACTER DE NOVA LINHA \"\\n\" NA SAÍDA**\n**NUNCA COLOQUE ÂNCORAS COMO ```ssml AO REDOR DO TEXTO**"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -1900,
        -280
      ],
      "id": "785897f8-c67a-4bb3-a89f-881aa62924a7",
      "name": "Formatar SSML"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Mensagem chegando?').item.json.mensagem }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    },
                    "id": "1382cd26-d96e-4c55-99dd-2ca305ffe82e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Texto"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b9a7e16f-b6e4-45d7-846d-92dcb3117593",
                    "leftValue": "={{ $('Info').item.json.mensagem_de_audio }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Áudio"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2240,
        -360
      ],
      "id": "dcc793a5-6db6-4676-8998-eaa0335bf10b",
      "name": "Tipo de mensagem1"
    },
    {
      "parameters": {
        "content": "### Importante!!\n\nEssa lógica só irá funcionar com o workflow ativo (modo produção).\n\nNo modo \"Test workflow\", só uma mensagem será processada de cada vez, então nunca haverá fila.",
        "height": 140,
        "width": 480,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4220,
        -100
      ],
      "id": "16f9f9c0-7f6e-41a8-b392-9d71af9ebf8e",
      "name": "Sticky Note15"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Secretária').item.json.output }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Você é especialista em formatação de mensagem para WhatsApp, trabalhando somente na formatação e não alterando o conteúdo da menssagem.\n\n- Substitua ** por *\n- Remova #\n- Remova emojis"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.6,
      "position": [
        -1520,
        -400
      ],
      "id": "9a76fef7-7a9a-4364-becd-7397aebab7e5",
      "name": "Formatar texto"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-04-17",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1340,
        -260
      ],
      "id": "0abe5a5a-5fe8-47f6-b49d-b7cb5cbf6268",
      "name": "Google Gemini Chat Model2"
    },
    {
      "parameters": {
        "chatId": "={{ $('Info').item.json.telegram_chat_id }}",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTool",
      "typeVersion": 1.2,
      "position": [
        -2020,
        -80
      ],
      "id": "a21b3918-4215-47af-b052-030496eab766",
      "name": "Enviar alerta de cancelamento",
      "webhookId": "d045a8c1-ec1b-4d20-8226-457aa18934af"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro-preview-03-25",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -2960,
        -80
      ],
      "id": "c3cbcffb-65d6-429f-ad43-18bc643cb231",
      "name": "Gemini"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Info').item.json.telefone }}",
        "tableName": "n8n_historico_mensagens",
        "contextWindowLength": 50
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -2840,
        -80
      ],
      "id": "60379b5f-146b-4efc-bd71-d1ac65e08281",
      "name": "Memory"
    },
    {
      "parameters": {
        "description": "Use a ferramenta para refletir sobre algo. Ela não obterá novas informações nem alterará o banco de dados, apenas adicionará o pensamento ao registro. Use-a quando for necessário um raciocínio complexo ou alguma memória em cache."
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        -2720,
        -80
      ],
      "id": "8577725b-a47b-4e3a-b9e8-155315d60d0c",
      "name": "Refletir"
    },
    {
      "parameters": {
        "content": "## Notas sobre agendas Google Calendar\n\nPara referenciar uma agenda do Google Calendar corretamente, acesse as configurações da agenda, clique em \"Integrar agenda\", e copie o \"ID da agenda\".\n\nPara agendas criadas, esse ID se parece com isso:\n\n```\nc_188fjds8f7hs83gk3i9@group.calendar.google.com\n```\n\nPara sua agenda principal, o ID será simplesmente o seu email (exemplo: `seuemail@gmail.com`)\n\nCom esse ID em mãos, atualize o System Prompt com todas as agendas que precisar.\n",
        "height": 320,
        "width": 680,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3020,
        100
      ],
      "id": "f821760d-4e4e-4835-8ae3-6e65739742f4",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "content": "## Notas sobre a ferramenta \"Escalar humano\"\n\nDevido a dificuldade no uso de etiquetas do Evolution, não é trivial desabilitar o envio de mensagens para o usuário após o uso dessa ferramenta.\n\nPara ver como isso pode ser feito mais facilmente com o Chatwoot, assista o nosso vídeo.",
        "height": 320,
        "width": 360,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2320,
        100
      ],
      "id": "dc8a09c8-e453-4c1b-8982-b7f0ad748e8e",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Use essa ferramenta quando detectar uma situação que deve ser informada ao gestor responsável.\n\nUse o seguinte formato para a mensagem\n\n```\nUsuário <nome do usuário> (<telefone do usuário>) precisa de atenção imediata.\n\nÚltima mensagem:\n\n---\n\n<última mensagem do usuário>\n```",
        "chatId": "={{ $('Info').item.json.telegram_chat_id }}",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTool",
      "typeVersion": 1.2,
      "position": [
        -1880,
        -80
      ],
      "id": "52a06c0c-7b8a-45ef-b3f7-add4706586c6",
      "name": "Escalar humano",
      "webhookId": "d045a8c1-ec1b-4d20-8226-457aa18934af"
    },
    {
      "parameters": {
        "toolDescription": "Envia uma mensagem de reação como resposta a uma mensagem do usuário. Reação é sempre um emoji.",
        "method": "POST",
        "url": "={{ $('Info').item.json.url_evolution }}/message/sendReaction/{{ $('Info').item.json.instancia }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"key\": {\n    \"remoteJid\": \"{{ $('Info').item.json.telefone + '@s.whatsapp.net' }}\",\n    \"fromMe\": {{ $('Info').item.json.fromMe }},\n    \"id\": \"{{ $('Info').item.json.id_mensagem }}\"\n  },\n  \"reaction\": \"{reacao}\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -2580,
        -80
      ],
      "id": "9413fb89-d2ab-4e23-965a-94d210a1758b",
      "name": "Reagir mensagem"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data.base64",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -4300,
        200
      ],
      "id": "554c5647-9c56-4c3d-ab91-bc6abe0b7cf3",
      "name": "Converter base64 para áudio."
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_fila_mensagens",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "telefone": "={{ $('Info').item.json.telefone }}",
            "mensagem": "={{ $('Info').item.json.mensagem }}",
            "timestamp": "={{ $('Info').item.json.timestamp.toDateTime('s') }}",
            "id_mensagem": "={{ $('Info').item.json.id_mensagem }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "id_mensagem",
              "displayName": "id_mensagem",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "telefone",
              "displayName": "telefone",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "mensagem",
              "displayName": "mensagem",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "timestamp",
              "displayName": "timestamp",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -4720,
        -260
      ],
      "id": "1d4ae8e8-d83d-45fd-b271-e9fdf2237863",
      "name": "Enfileirar mensagem."
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d29ae5a6-0f4d-4bf7-b8f1-b77608e1ea74",
              "name": "mensagem",
              "value": "={{ $('Transcrever áudio').item.json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3220,
        200
      ],
      "id": "75d7cf48-4f87-4a77-abff-c1e05625c828",
      "name": "Set mensagem.",
      "executeOnce": true
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-04-17",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1700,
        -80
      ],
      "id": "95d9efe3-f1cb-4051-b73d-5af29b5d307c",
      "name": "Google Gemini Chat Model."
    },
    {
      "parameters": {
        "content": "![Evolution API](https://mintlify.s3.us-west-1.amazonaws.com/evolution/logo/dark.svg)",
        "height": 100,
        "width": 280,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6740,
        -600
      ],
      "id": "c7fc75f7-7b39-428b-9150-e7df67cbbcbe",
      "name": "Sticky Note20"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c8fd010d-6096-4a50-b3e2-e9fe26661840",
              "name": "id_mensagem",
              "value": "={{ $json.body.data.key.id }}",
              "type": "string"
            },
            {
              "id": "8bf522a6-75fb-434a-854c-b736539309e1",
              "name": "telefone",
              "value": "={{ $json.body.data.key.remoteJid.split('@').first() }}",
              "type": "string"
            },
            {
              "id": "731eef50-51cd-4328-8eda-177d937d519b",
              "name": "instancia",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "0d622a33-f313-4758-a764-fa6cbf2b0587",
              "name": "mensagem",
              "value": "={{ $json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "8f4b9d84-56e0-4f45-9f17-68c53f365f43",
              "name": "mensagem_de_audio",
              "value": "={{ $json.body.data.message.audioMessage?.ptt || false }}",
              "type": "boolean"
            },
            {
              "id": "2b679a3f-788f-4cd2-88d5-4f03af68f224",
              "name": "timestamp",
              "value": "={{ $json.body.data.messageTimestamp }}",
              "type": "number"
            },
            {
              "id": "a445d43a-6cd5-4388-982b-9fc58433b342",
              "name": "fromMe",
              "value": "={{ $json.body.data.key.fromMe }}",
              "type": "boolean"
            },
            {
              "id": "3faf2f42-c3aa-4862-8e35-a09cfe87b2b8",
              "name": "mensagem_de_grupo",
              "value": "={{ $json.body.data.key.remoteJid.split('@').last() === 'g.us' }}",
              "type": "boolean"
            },
            {
              "id": "60cd2050-f950-4409-bd3c-79f7c29d20f0",
              "name": "url_evolution",
              "value": "={{ $json.body.server_url }}",
              "type": "string"
            },
            {
              "id": "9d73a108-1624-4d16-b3ba-caac1c921d1d",
              "name": "telegram_chat_id",
              "value": "<cole seu telegram chat id>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5520,
        -260
      ],
      "id": "a394773c-405b-45fc-abd7-6c9871c7b915",
      "name": "Info"
    },
    {
      "parameters": {
        "content": "## Listar vozes do ElevenLabs\n\nExiste um community node do ElevenLabs, mas só funciona para vozes em inglês. Como as requisições são simples, é fácil usar o HTTP request.\n\nVoz sugerida: [Keren](https://elevenlabs.io/app/voice-library?voiceId=33B4UnXyTNbgLmdEDh5P)\n\n#### Configurações\n- Speed: 1.10\n- Stability: 35%\n- Similarity: 44%\n\n\n[![ElevenLabs](https://framerusercontent.com/images/YU6MnXR7ZjWNRjlYzx2Hrpcx0.png)](https://try.elevenlabs.io/9k5l5hagxkel)\n\n## [Clique aqui para criar sua conta gratuita no ElevenLabs](https://try.elevenlabs.io/9k5l5hagxkel)",
        "height": 480,
        "width": 460,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1560,
        100
      ],
      "id": "5921c07b-e5bb-43e5-9518-a26c68e4a7b2",
      "name": "Sticky Note21"
    },
    {
      "parameters": {
        "content": "[![fazer.ai](https://framerusercontent.com/images/HqY9djLTzyutSKnuLLqBr92KbM.png?scale-down-to=256)](https://fazer.ai?utm_source=n8n&utm_campaign=sec-ep2&utm_medium=evo-1)\n\n## Esse é um template faça você mesmo do canal\n## Lucas Moreira\n\n### Inscreva-se no nosso canal no YouTube\n[![YouTube Lucas Moreira](https://img.shields.io/youtube/channel/subscribers/UCtmp6SxzLscu0GRTbgM8FTw?style=flat-square&logo=youtube&label=Inscreva-se&color=f00)](https://youtube.com/@eulucassmoreira?si=0lH7hwX9pukjhmPQ)\n\n### Siga nosso GitHub\n[![GitHub fazer.ai](https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&logo=github&logoColor=white&label)](https://github.com/fazer-ai)\n",
        "height": 440,
        "width": 550,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -6960,
        -900
      ],
      "id": "2cd66425-3dc2-4400-8486-916cdcb0bef4",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "url": "https://api.elevenlabs.io/v2/voices",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1320,
        280
      ],
      "id": "8bd92801-d8e1-499d-a362-c7a7ac58e627",
      "name": "Testar credencial - ElevenLabs"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 8 * * 1-5"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -160,
        -360
      ],
      "id": "b95f831a-f676-4775-ab15-6f86cfa8a44b",
      "name": "Gatilho diário"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Agora são {{ $now.format('FFFF') }}.",
        "options": {
          "systemMessage": "=Agora são {{ $now.format('FFFF') }}.\n\nVocê é um agente especializado em **confirmação de consultas** para a clínica. Sua função principal é:\n\n1. **Listar os eventos** agendados para o próximo dia no Google Calendar.\n2. **Obter o telefone** na descrição de cada evento.\n3. **Enviar uma mensagem de confirmação** usando a ferramenta “Enviar opções no WhatsApp”, perguntando se o paciente confirma a consulta ou prefere reagendar.\n4. **Inclua na mensagem**:\n  - Nome do paciente\n  - Nome do profissional\n  - Data e hora da consulta\n\n## IMPORTANTE\n- Você **não recebe respostas** diretamente; o retorno do paciente é tratado por outro agente.\n- Use a ferramenta \"Refletir1\" antes e depois de realizar operações complexas, para ter certeza de que deu tudo certo.\n- SEMPRE QUE ENVIAR UMA MENSAGEM PARA O PACIENTE, **USE A FERRAMENTA \"Salvar_memoria\"**. ISSO É MUITO IMPORTANTE, NÃO FAÇA ERRADO POR FAVOR.\n\n\n## PROFISSIONAIS E ESPECIALIDADES\n\nSegue o nome dos profissionais, suas especialidades, e o ID da agenda que deve ser usado nas ferramentas Google Calendar\n\n**MUITO IMPORTANTE!! O ID DA AGENDA INCLUI O \"@group.calendar.google.com\". NÃO OMITA AO UTILIZAR AS FERRAMENTAS**\n\n- Dr. João Paulo Ferreira - Médico - Clinico Geral (c_46b1d614bf4f151ca950431202bf90ca003301793b48cffc489dc411be79c4bf@group.calendar.google.com)\n- Dr. Roberto Almeida - Médico - Cardiologia (c_6c3005bf4afd591f13f242f6509208ddbe1feadad3f6521884ab79c59069bfd0@group.calendar.google.com)\n- Dra. Ana Silva - Dentista - Clínica Geral (c_ebce2058c0b75e881585b90539f6ded839de178d4bb64e1aa9e4f6468d6954a6@group.calendar.google.com)\n- Dra. Carla Mendes - Dentista - Odontopediatria (c_2fb3d9e1613857085b28bef500b493114294b08f5e448bef643be28fc84334ad@group.calendar.google.com)\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        260,
        -360
      ],
      "id": "137fd8a9-a5a2-4a9e-887e-4276381bc003",
      "name": "Assistente de confirmação"
    },
    {
      "parameters": {
        "content": "# Assistente de confirmação de agendamentos \n",
        "height": 500,
        "width": 1060,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -260,
        -440
      ],
      "id": "89270565-fe11-4129-a89a-82df73c157c2",
      "name": "Sticky Note16"
    },
    {
      "parameters": {
        "toolDescription": "Use essa ferramenta para enviar as informações de agendamento no WhatsApp.\n\nO telefone deve ser formatado com apenas números, incluindo o código do país.\n\nExemplo: \"551112345678\"",
        "method": "POST",
        "url": "={{ $('Info1').item.json.url_evolution }}/message/sendText/{{ $('Info1').item.json.instancia }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{telefone}\",\n  \"text\": \"{mensagem}\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        520,
        -120
      ],
      "id": "0d849c03-6869-434f-94e6-14c729903d0c",
      "name": "Enviar informacoes agendamento1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=assistente_confirmacao",
        "tableName": "n8n_historico_mensagens"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        100,
        -120
      ],
      "id": "b35b5f06-d3a2-439d-9bc1-fcc3db45480a",
      "name": "Postgres Chat Memory"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-preview-04-17",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -40,
        -120
      ],
      "id": "f297e12c-48dc-4824-8055-42b82dab71b0",
      "name": "Google Gemini Chat Model"
    },
    {
      "parameters": {
        "content": "## Notas sobre a ferramenta \"Salvar memoria\"\n\nPor padrão, no N8N não existe uma forma direta de compartilhar memória entre agentes diferentes.\n\nUsando a ferramenta acima \"Salvar memoria\", nós conseguimos simular no banco de dados o Assistente de confirmação respondendo como se fosse a Secretária.\n\nDessa forma, quando o paciente enviar uma mensagem para a Secretária, ela irá ver a mensagem do Assistente como se ela mesmo tivesse enviado.\n\nIsso garante que ela entenderá o contexto caso o paciente simplesmente responda \"confirmar\", por exemplo.",
        "height": 240,
        "width": 1060,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -260,
        100
      ],
      "id": "4aa48f63-8c0b-4107-a520-359685d54a4b",
      "name": "Sticky Note19"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Salva a informação de agendamento enviada, para que a secretária saiba que foi enviada.",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "n8n_historico_mensagens",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "session_id": "={{ $fromAI('telefone', 'Telefone do paciente, formatado com apenas números, incluindo código do país. Ex.: \"551112345678\"', 'string') }}",
            "message": "={ \"type\": \"ai\", \"content\": \"{{ $fromAI('message', 'A mesma mensagem enviada para o paciente.', 'string') }}\" }"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "object",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        240,
        -120
      ],
      "id": "984c5989-4c84-44ad-8521-5e3cb8bffcfc",
      "name": "Salvar memoria"
    },
    {
      "parameters": {
        "sseEndpoint": "=<url do seu MCP Google Calendar>"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        380,
        -120
      ],
      "id": "3ce30c7a-2b2c-4984-91c1-b022e33e7aae",
      "name": "MCP Google Calendar."
    },
    {
      "parameters": {
        "description": "Use a ferramenta para refletir sobre algo. Ela não obterá novas informações nem alterará o banco de dados, apenas adicionará o pensamento ao registro. Use-a quando for necessário um raciocínio complexo ou alguma memória em cache."
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        660,
        -120
      ],
      "id": "e0d050e2-ce2e-4e8c-800e-a69a17eb4b07",
      "name": "Refletir1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "731eef50-51cd-4328-8eda-177d937d519b",
              "name": "instancia",
              "value": "={{ $json.body.instance }}",
              "type": "string"
            },
            {
              "id": "60cd2050-f950-4409-bd3c-79f7c29d20f0",
              "name": "url_evolution",
              "value": "=<cole sua url do evolution>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        60,
        -360
      ],
      "id": "1f50d2b3-244a-4b54-b697-a05bcb6a9320",
      "name": "Info1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_evolution }}/chat/getBase64FromMediaMessage/{{ $('Info').item.json.instancia }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"message\": { \"key\": { \"id\": \"{{ $('Info').item.json.id_mensagem }}\" } },\n  \"convertToMp4\": true\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4620,
        200
      ],
      "id": "e8a029a7-073b-4e1b-bc89-d0bcac6762c5",
      "name": "Download áudio"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_evolution }}/chat/markMessageAsRead/{{ $('Info').item.json.instancia }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"readMessages\": [\n    { \n      \"remoteJid\": \"{{ $('Mensagem recebida').item.json.body.data.key.remoteJid }}\",\n      \"fromMe\": {{ $('Info').item.json.fromMe }},\n      \"id\": \"{{ $('Info').item.json.id_mensagem }}\"\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3640,
        200
      ],
      "id": "e3691841-355b-4034-bfb0-ca229236ec1e",
      "name": "Marcar como lida"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.body.url_evolution }}/chat/sendPresence/{{ $json.body.instancia }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.body.telefone }}"
            },
            {
              "name": "presence",
              "value": "=paused"
            },
            {
              "name": "delay",
              "value": "0"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -960,
        -320
      ],
      "id": "225b660b-8a5d-4133-8a3a-5ee30eaedbed",
      "name": "Resetar status1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_evolution }}/message/sendText/{{ $('Info').item.json.instancia }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.body.telefone }}"
            },
            {
              "name": "text",
              "value": "={{ $('Formatar texto').item.json.text }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -700,
        -320
      ],
      "id": "b20e1c9d-a405-4e9a-9c3b-d2cc2fb8534f",
      "name": "Responder mensagem texto."
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $json.body.url_evolution }}/chat/sendPresence/{{ $json.body.instancia }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.body.telefone }}"
            },
            {
              "name": "presence",
              "value": "=paused"
            },
            {
              "name": "delay",
              "value": "0"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -960,
        -140
      ],
      "id": "ac58ce03-7764-4b21-b5a3-d43ab7d7fd4e",
      "name": "Resetar status"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Info').item.json.url_evolution }}/message/sendWhatsAppAudio/{{ $('Info').item.json.instancia }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "={{ $json.body.telefone }}"
            },
            {
              "name": "audio",
              "value": "={{ $('Converter áudio para base64').item.json.data }}"
            },
            {
              "name": "mimetype",
              "value": "audio/mp3"
            },
            {
              "name": "fileName",
              "value": "audio.mp3"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -700,
        -140
      ],
      "id": "3d92682a-6af7-4a6f-9961-15b4abb3add3",
      "name": "Enviar imagem"
    },
    {
      "parameters": {
        "content": "## [Clique aqui e entre agora para tirar suas dúvidas](https://lucasmoreira.fazer.ai)\n[![Banner comunidade](https://framerusercontent.com/images/KIXMxk9eKCoCsNeVm1oaz5HnaQ.png)](https://lucasmoreira.fazer.ai)",
        "height": 440,
        "width": 1380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -5880,
        -900
      ],
      "id": "929e95d3-3fff-4d36-a794-1137f5edf3cf",
      "name": "Sticky Note36"
    }
  ],
  "connections": {
    "Mensagem chegando?": {
      "main": [
        [
          {
            "node": "Tipo de mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem recebida": {
      "main": [
        [
          {
            "node": "Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem encavalada?": {
      "main": [
        [
          {
            "node": "Limpar fila de mensagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar mensagens": {
      "main": [
        [
          {
            "node": "Mensagem encavalada?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Concatenar mensagens": {
      "main": [
        [
          {
            "node": "Secretária",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limpar fila de mensagens": {
      "main": [
        [
          {
            "node": "Marcar como lidas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Esperar": {
      "main": [
        [
          {
            "node": "Buscar mensagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tipo de mensagem": {
      "main": [
        [
          {
            "node": "Enfileirar mensagem.",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download áudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcrever áudio": {
      "main": [
        [
          {
            "node": "Marcar como lida",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Digitando async": {
      "main": [
        [
          {
            "node": "Concatenar mensagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gravando async": {
      "main": [
        [
          {
            "node": "Set mensagem.",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Converter áudio para base64": {
      "main": [
        [
          {
            "node": "Resetar status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marcar como lidas": {
      "main": [
        [
          {
            "node": "Digitando async",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Listar arquivos": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Baixar e enviar arquivo": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Secretária": {
      "main": [
        [
          {
            "node": "Tipo de mensagem1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar áudio": {
      "main": [
        [
          {
            "node": "Converter áudio para base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatar SSML": {
      "main": [
        [
          {
            "node": "Gerar áudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tipo de mensagem1": {
      "main": [
        [
          {
            "node": "Formatar texto",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Formatar SSML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatar texto": {
      "main": [
        [
          {
            "node": "Resetar status1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Formatar texto",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Enviar alerta de cancelamento": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Gemini": {
      "ai_languageModel": [
        [
          {
            "node": "Secretária",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Memory": {
      "ai_memory": [
        [
          {
            "node": "Secretária",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Refletir": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Escalar humano": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Reagir mensagem": {
      "ai_tool": [
        [
          {
            "node": "Secretária",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Converter base64 para áudio.": {
      "main": [
        [
          {
            "node": "Transcrever áudio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enfileirar mensagem.": {
      "main": [
        [
          {
            "node": "Esperar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set mensagem.": {
      "main": [
        [
          {
            "node": "Secretária",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model.": {
      "ai_languageModel": [
        [
          {
            "node": "Formatar SSML",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Info": {
      "main": [
        [
          {
            "node": "Mensagem chegando?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gatilho diário": {
      "main": [
        [
          {
            "node": "Info1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar informacoes agendamento1": {
      "ai_tool": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Salvar memoria": {
      "ai_tool": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MCP Google Calendar.": {
      "ai_tool": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Refletir1": {
      "ai_tool": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Info1": {
      "main": [
        [
          {
            "node": "Assistente de confirmação",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download áudio": {
      "main": [
        [
          {
            "node": "Converter base64 para áudio.",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Marcar como lida": {
      "main": [
        [
          {
            "node": "Gravando async",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resetar status1": {
      "main": [
        [
          {
            "node": "Responder mensagem texto.",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resetar status": {
      "main": [
        [
          {
            "node": "Enviar imagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
